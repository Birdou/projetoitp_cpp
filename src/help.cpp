
#include "help.hpp"

void listcolor ()
{
	printf("\nTons de cinza:\n                Black,                 White,                grey11,\n               grey21,                grey31,               DimGray,\n                 Gray,              DarkGray,                Silver,\n            LightGrey,           ");
	printf("  Gainsboro.\n------------------------\n\nTons de azul:\n            SlateBlue,            SlateBlue1,            SlateBlue3,\n        DarkSlateBlue,          MidnightBlue,                  Navy,\n             DarkBlue,            MediumBlue,                  Bl");
	printf("ue,\n       CornflowerBlue,             RoyalBlue,            DodgerBlue,\n          DeepSkyBlue,          LightSkyBlue,               SkyBlue,\n            LightBlue,             SteelBlue,        LightSteelBlue,\n            SlateGray,        LightSlateGray.");
	printf(" \n------------------------\n\nTons de ciano:\n                 Aqua,                  Cyan,         DarkTurquoise,\n            Turquoise,       MediumTurquoise,         LightSeaGreen,\n             DarkCyan,                  Teal,            Aquamarine,\n     M");
	printf("ediumAquamarine,             CadetBlue. \n------------------------\n\nTons de verde:\n        DarkSlateGray,     MediumSpringGreen,           SpringGreen,\n            PaleGreen,            LightGreen,          DarkSeaGreen,\n       MediumSeaGreen,              ");
	printf("SeaGreen,             DarkGreen,\n                Green,           ForestGreen,             LimeGreen,\n                 Lime,             LawnGreen,            Chartreuse,\n          GreenYellow,           YellowGreen,             OliveDrab,\n       DarkOlive");
	printf("Green,                 Olive, \n------------------------\n\nTons de marrom:\n            DarkKhaki,             Goldenrod,         DarkGoldenrod,\n          SaddleBrown,                Sienna,             RosyBrown,\n                 Peru,             Chocolate,");
	printf("            SandyBrown,\n          NavajoWhite,                 Wheat,             BurlyWood,\n                  Tan. \n------------------------\n\nTons de roxo:\n      MediumSlateBlue,          MediumPurple,            BlueViolet,\n               Indigo,        ");
	printf("    DarkViolet,            DarkOrchid,\n         MediumOrchid,                Purple,           DarkMagenta,\n              Fuchsia,               Magenta,                Violet,\n               Orchid,                  Plum. \n------------------------\n\nTons d");
	printf("e rosa:\n      MediumVioletRed,              DeepPink,               HotPink,\n        PaleVioletRed,             LightPink,                  Pink,\n           LightCoral,             IndianRed,               Crimson.\n------------------------\n\nTons de vermelh");
	printf("o:\n               Maroon,               DarkRed,             FireBrick,\n                Brown,                Salmon,            DarkSalmon,\n          LightSalmon,                 Coral,                Tomato,\n                  Red.\n-----------------------");
	printf("-\n\nTons de laranja:\n            OrangeRed,            DarkOrange,                Orange.\n------------------------\n\nTons de amarelo:\n                 Gold,                Yellow,                 Khaki.\n------------------------\n\nTons pastel:\n            Alic");
	printf("eBlue,            GhostWhite,                  Snow,\n             Seashell,           FloralWhite,            WhiteSmoke,\n                Beige,               OldLace,                 Ivory,\n                Linen,              Cornsilk,          AntiqueWhi");
	printf("te,\n       BlanchedAlmond,                Bisque,           LightYellow,\n         LemonChiffon,  LightGoldenrodYellow,            PapayaWhip,\n            PeachPuff,              Moccasin,         PaleGoldenrod,\n            MistyRose,         LavenderBlush,");
	printf("              Lavender,\n              Thistle,                 Azure,             LightCyan,\n           PowderBlue,         PaleTurquoise,              Honeydew,\n            MintCream.\n------------------------\n\nPara usar uma cor pelo nome, use scolor [nome");
	printf("_da_cor] ou sclear [nome_da_cor].\n------------------------\n");
}

void help ()
{
	printf("\nBlue equalizer: blueequal [0-100] [0-100] [0-100]\n\tAjusta a intensidade de vermelho, verde e azul na imagem de acordo com\nos níveis originais de azul da imagem. Valores altos (ou baixos demais)\npodem provocar a perda de informação;\n--------------------");
	printf("----\n\nBrighten: brighten [percentual]\n\tAumenta o brilho da imagem. Valores altos (ou baixos demas) podem\nprovocar a perda de informação;\n------------------------\n\nCircle: circle [linha] [coluna] [raio] [preencher (P)]\n\tDesenha um círculo com raio especi");
	printf("ficado. Para P > 0 o círculo será\npreenchido;\n------------------------\n\nClear: clear [0-255] [0-255] [0-255]\n\tRedefine as cores dos pixeis da imagem para os valores pit::rgb vermelho,\nazul e verde respectivamente;\n------------------------\n\nColor: color [0-255");
	printf("] [0-255] [0-255]\n\tMuda a cor do pincel para os valores pit::rgb vermelho, azul e verde\nrespectivamente;\n------------------------\n\nComp: comp [caminho 1] [caminho 2]\n\tComprime uma imagem PPM ou descomprime, caso esta esteja comprimida, e\nsalva em \'caminho 2\'\n--");
	printf("----------------------\nCurve: curve [pontos] [X1] [Y1] ... [X pontos] [Y pontos]\n\tDesenha uma curva de Bézier de ordem \\\"pontos\\\";\n------------------------\n\nDarken: darken [0-100]\n\tDiminui o brilho da imagem. Valores altos (ou baixos demais) podem\nprovoca");
	printf("r a perda de informação;\n------------------------\n\nDesaturate: desaturate [0-100] [0-100] [0-100]\n\tProvoca a desaturação dos pixeis que apresentarem um percentual de\nbrilho menor do que o valor informado em vermelho, verde e azul;\n---------------------");
	printf("---\n\nElipse: elipse [linha] [coluna] [largura] [altura]\n\tDesenha uma elipse com largura e algura informadas;\n------------------------\n\nExit: exit\n\tSai do programa e libera a memória antes utilizada para a manipulação da\nimagem;\n------------------------\n");
	printf("\nFill: fill [linha] [coluna]\n\tPreenche com cor, a partir de (coluna, linha) todos os pixeis até que\nseja encontrado um limite, caso não exista, a função preencherá toda a\nimagem, mantendo o conteúdo preexistente;\n------------------------\n\nFrom file: ");
	printf("fromfile [arquivo]\n\tCarrega um algoritmo para a criação de uma imagem;\n------------------------\n\nGlitch: glitch [distancia] [ângulo]\n\tAplica um efeito de distanciamento dos planos de cores de acordo com o\nângulo informado;\n------------------------\n\nGlo");
	printf("bal: global [linha] [coluna]\n\tAltera todas as cores idênticas a cor na posição informada para a cor do\npincel;\n------------------------\n\nGray scale: grayscale\n\tAplica um filtro preto e branco em toda a imagem;\n------------------------\n\nGreen equalizer: ");
	printf("greenequal [0-100] [0-100] [0-100]\n\tAjusta a intensidade de vermelho, verde e azul na imagem de acordo com\nos níveis originais de verde da imagem. Valores altos (ou baixos demais)\npodem provocar a perda de informação;\n------------------------\n\nGuev: gue");
	printf("v [escala]\n\tAplica um estilo Guevara (preto e branco por limiar) na imagem;\n\t\n------------------------\n\nHelp: help\n\tExibe esta mensagem;\n------------------------\n\nImage: image [largura] [altura]\n\tCria uma nova imagem com a largura e altura especificadas;\n-");
	printf("-----------------------\n\nIntensity: intensity [0-100] [0-100] [0-100]\n\tAjusta a intensidade de vermelho, verde e azul na imagem. Valores altos\n(ou baixos demais) podem provocar a perda de informação;\n------------------------\n\nInvert: invert\n\tInverte a im");
	printf("agem verticalmente;\n------------------------\n\nLine: line [linha 1] [coluna 1] [linha 2] [coluna 2]\n\tDesenha uma linha de (linha 1, coluna 1) a (linha 2, coluna 2);\n------------------------\n\nList color: listcolor\n\tExibe uma mensagem listando algumas cores p");
	printf("redefinidas pelo programa;\n------------------------\n\nNegative: negative\n\tAplica um filtro negativo em toda a imagem;\n------------------------\n\nOpen: open [caminho]\n\tCarrega um arquivo PPM (binário ou ASCII) preexistente para edição.\nOutros formatos (ain");
	printf("da) não são suportados;\n------------------------\n\nPixelize: pixelize [pixels]\n\tCria um efeito de pixelização. O valor informado definirá o tamanho do\nnovo pixel;\n------------------------\n\nPolygon: polygon [lados] [X1] [Y1] [X2] [Y2] [X3] [Y3] ... [X l");
	printf("ados] [Y lados]\n\tCria um polígono com a quantidade de lados especificada, passando pelos\n\"lados\" pares de pontos;\n------------------------\n\nPurge: purge\n\tLimpa a tela;\n------------------------\n\nRBGlitch: rbglitch [distancia] [ângulo]\n\tAplica um efeito de");
	printf(" distanciamento dos planos de cores de acordo com o\nângulo informado depois de ter aplicado o efeito grayscale;\n------------------------\n\nRectangle: rect [linha] [coluna] [largura] [altura]\n\tCria um retângulo com largura e altura especificadas;\n---------");
	printf("---------------\n\nRed equalizer: redequal [0-100] [0-100] [0-100]\n\tAjusta a intensidade de vermelho, verde e azul na imagem de acordo com\nos níveis originais de vermelho da imagem. Valores altos (ou baixos demais)\npodem provocar a perda de informação;\n--");
	printf("----------------------\n\nRotate: rotate\n\tGira a imagem em 90 graus no sentido horário;\n------------------------\n\nSave: save [3 ou 6] [caminho]\n\tSalva a imagem no formato P3 (PPMA) ou P6 (PPMB) no diretório\nespecificado;\n------------------------\n\nSpecial c");
	printf("lear: sclear [cor]\n\tRedefine as cores dos pixeis da imagem para a cor informada. (Use\nlistcolor para obter a lista de cores que podem ser usadas com esse\ncomando);\n------------------------\n\nSpecial color: scolor [cor]\n\tAltera a cor do pincel para a cor inf");
	printf("ormada. (Use listcolor para obter a\nlista de cores que podem ser usadas com esse comando).\n------------------------\n\nSepia: sepia\n\tAplica um filtro sépia (antigo) em toda a imagem;\n------------------------\n\nSize: size [tamanho]\n\tAltera o tamanho do pincel");
	printf(" para o tamanho informado.\n------------------------\n\nUndo: undo\n\tDesfaz a última alteração feita na imagem;\n------------------------\n\nVibrancy: vibrancy [0-100]\n\tAjusta a vibração de cores na imagem de acordo com o percentual\nespecificado. Valores alt");
	printf("os (ou baixos demais) podem provocar a perda de\ninformação;\n------------------------\n");
}
